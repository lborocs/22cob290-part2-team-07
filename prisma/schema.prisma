// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  uid      String    @id @default(uuid())
  email    String    @unique
  name     String
  password String
  leads    Project[]
  assigned Task[]
  posts    Post[]
}

model Task {
  uid         Int      @id @default(autoincrement())
  assigned    User[]
  project     Project? @relation(fields: [projectId], references: [uid])
  projectId   Int?
  subtasks    Task[]   @relation("Subtask")
  parent      Task?    @relation("Subtask", fields: [parentId], references: [uid])
  parentId    Int?
  name        String
  description String
  createdAt   DateTime @default(now())
  deadline    DateTime
  workerHours Int
  // SQLite does not support enums :(
  status      Int      @default(0)
}

model Project {
  uid         Int      @id @default(autoincrement())
  leader      User     @relation(fields: [leaderId], references: [uid])
  leaderId    String
  name        String
  description String
  createdAt   DateTime @default(now())
  deadline    DateTime
  tasks       Task[]
}

model Client {
  uid            Int     @id @default(autoincrement())
  name           String
  representative String
  email          String
  address        String?
  phone          String?
  website        String?
}

model Topic {
  uid   Int    @id @default(autoincrement())
  name  String @unique
  posts Post[]
}

model Post {
  uid       Int      @id @default(autoincrement())
  owner     User     @relation(fields: [ownerId], references: [uid])
  ownerId   String
  topic     Topic    @relation(fields: [topicId], references: [uid])
  topicId   Int
  title     String
  markdown  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  assets    Asset[]
}

model Asset {
  uid   String @id @default(uuid())
  posts Post[]
}
